<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage);CopyProjectReferencesToPackage</TargetsForTfmSpecificContentInPackage>
    <!-- This ensures that only this project's assembly is available as a compile time reference. It is important that none of the Leaf projects have APIs exposed in the Lib API. -->
    <BuildOutputTargetFolder>lib;ref</BuildOutputTargetFolder>
  </PropertyGroup>

  <ItemGroup>
    <!-- Declare PrivateAssets all on all project references you want to merge into your package. 
     -->
    <ProjectReference Include="..\Leaf\Leaf.csproj" PrivateAssets="all" /> 
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
    <!-- The generated package won't get a reference to NuGet.Frameworks but it probably needs it, unless we manually declare it here. -->
    <PackageReference Include="NuGet.Frameworks" Version="6.9.1" />
  </ItemGroup>

  <Target Name="CopyProjectReferencesToPackage" DependsOnTargets="BuildOnlySettings;ResolveReferences">


    <ItemGroup>
      <!-- Include only projects with PrivateAssets all, Anything without a PrivateAssets all will be assumed to be a package itself. -->
      <TfmSpecificPackageFile Include="@(ReferenceCopyLocalPaths->WithMetadataValue('ReferenceSourceTarget', 'ProjectReference')->WithMetadataValue('PrivateAssets', 'All'))"
      PackagePath="lib\$(TargetFramework)" />
      <!-- Remove pdbs-->
      <_SymbolsFromReferences Include="@(TfmSpecificPackageFile)" Condition="'%(Extension)' == '.pdb'" /> 
      <TfmSpecificPackageFile Remove="@(_SymbolsFromReferences)" />
    </ItemGroup>
  </Target>

</Project>